{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Applications/Metronome/src/Metronome.js\";\nimport React, { Component } from 'react';\nimport './Metronome.css';\n\nclass Metronome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playing: false,\n      count: 0,\n      bpm: 100,\n      beatsPerMeasure: 4\n    };\n  }\n\n  render() {\n    let bpm = 100;\n    let playing = false;\n    return React.createElement(\"div\", {\n      className: \"metronome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bpm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bpm-value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, bpm, \" BPM\"), React.createElement(\"input\", {\n      type: \"range\",\n      min: \"60\",\n      max: \"240\",\n      value: bpm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"playing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, playing ? 'Stop' : 'Start'));\n  }\n\n}\n\nexport default Metronome;","map":{"version":3,"sources":["/Users/artem/Applications/Metronome/src/Metronome.js"],"names":["React","Component","Metronome","constructor","props","state","playing","count","bpm","beatsPerMeasure","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AACjCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,KAAK,EAAE,CAFI;AAGXC,MAAAA,GAAG,EAAE,GAHM;AAIXC,MAAAA,eAAe,EAAE;AAJN,KAAb;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACR,QAAIF,GAAG,GAAG,GAAV;AACA,QAAIF,OAAO,GAAG,KAAd;AAEC,WAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BE,GAA5B,SADD,EAEC;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,GAAG,EAAC,IAAxB;AAA6B,MAAA,GAAG,EAAC,KAAjC;AAAuC,MAAA,KAAK,EAAEA,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADM,EAKN;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BF,OAAO,GAAG,MAAH,GAAY,OAAhD,CALM,CAAP;AAOD;;AAvB+B;;AA0BlC,eAAeJ,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Metronome.css';\n\nclass Metronome extends Component {\n\tconstructor(props) {\n    super(props);\n\n    this.state = {\n      playing: false,\n      count: 0,\n      bpm: 100,\n      beatsPerMeasure: 4\n    };\n  }\n  \n  render() {\n  \tlet bpm = 100;\n  \tlet playing = false;\n\n    return <div className=\"metronome\">\n    \t<div className='bpm'>\n    \t\t<div className='bpm-value'>{bpm} BPM</div>\n    \t\t<input type=\"range\" min=\"60\" max=\"240\" value={bpm} />\n    \t</div>\n    \t<button className=\"playing\">{playing ? 'Stop' : 'Start'}</button>\n    </div>;\n  }\n}\n\nexport default Metronome;"]},"metadata":{},"sourceType":"module"}