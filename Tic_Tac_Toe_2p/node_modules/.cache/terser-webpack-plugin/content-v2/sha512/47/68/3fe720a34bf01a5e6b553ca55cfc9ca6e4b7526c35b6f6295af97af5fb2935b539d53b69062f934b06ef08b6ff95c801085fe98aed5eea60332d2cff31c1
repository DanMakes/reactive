{"map":"{\"version\":3,\"sources\":[\"/Users/artem/Applications/Tic_Tac_Toe_2p/src/App.js\",\"/Users/artem/Applications/Tic_Tac_Toe_2p/src/serviceWorker.js\",\"/Users/artem/Applications/Tic_Tac_Toe_2p/src/index.js\"],\"names\":[\"Square\",\"_this\",\"this\",\"react_default\",\"a\",\"createElement\",\"className\",\"onClick\",\"props\",\"value\",\"React\",\"Component\",\"Board\",\"i\",\"_this2\",\"App_Square\",\"squares\",\"renderSquare\",\"calculateWinner\",\"lines\",\"length\",\"_lines$i\",\"Object\",\"slicedToArray\",\"b\",\"c\",\"counter\",\"Game\",\"_this3\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"history\",\"Array\",\"fill\",\"xIsNext\",\"stepNumber\",\"slice\",\"setState\",\"concat\",\"step\",\"_this4\",\"current\",\"winner\",\"moves\",\"map\",\"move\",\"desc\",\"key\",\"jumpTo\",\"status\",\"App_Board\",\"handleClick\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\nimport './App.css';\\n\\nclass Square extends React.Component {\\n\\n  render() {\\n    return (\\n      <button className=\\\"square\\\" onClick={() => this.props.onClick()}>\\n        {this.props.value}\\n      </button>\\n    );\\n  }\\n}\\n\\nclass Board extends React.Component {\\n\\n  renderSquare(i) {\\n    return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)}/>;\\n  }\\n\\n  render() {\\n    \\n    return (\\n      <div>\\n        <div className=\\\"board-row\\\">\\n          {this.renderSquare(0)}\\n          {this.renderSquare(1)}\\n          {this.renderSquare(2)}\\n        </div>\\n        <div className=\\\"board-row\\\">\\n          {this.renderSquare(3)}\\n          {this.renderSquare(4)}\\n          {this.renderSquare(5)}\\n        </div>\\n        <div className=\\\"board-row\\\">\\n          {this.renderSquare(6)}\\n          {this.renderSquare(7)}\\n          {this.renderSquare(8)}\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nclass Game extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      history: [{\\n        squares: Array(9).fill(null),\\n      }],\\n      xIsNext: true,\\n      stepNumber: 0,\\n    };\\n  }\\n\\n handleClick(i){\\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\\n    const current = history[history.length - 1];\\n    let squares = current.squares.slice();\\n\\n    if (calculateWinner(squares) || squares[i]) {\\n      return;\\n    }\\n    squares[i] = this.state.xIsNext ? 'X' : '0';\\n    this.setState({\\n      history: history.concat([{\\n      squares: squares,\\n      }]),\\n      stepNumber: history.length,\\n      xIsNext: !this.state.xIsNext,\\n    }\\n    );\\n  }\\n\\n  jumpTo(step) {\\n    this.setState({\\n      stepNumber: step,\\n      xIsNext: (step % 2) === 0,\\n    });\\n   }\\n\\n\\n  render() {\\n    const history = this.state.history;\\n    const current = history[this.state.stepNumber];\\n    const winner = calculateWinner(current.squares);\\n    const moves = history.map((step, move) => {\\n    const desc = move ?\\n        'Go to move #' + move :\\n        'Go to game start';\\n      return (\\n        <li key={move}>\\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\\n        </li>\\n      );\\n    });\\n    let status = \\\"\\\";\\n    if (winner === 'X' || winner === '0') {\\n      status = winner + ' won';\\n    }\\n    else if (winner === 'Draw'){\\n      status = winner;\\n    }\\n    else {\\n    status = 'Next player: ' + (this.state.xIsNext ? 'X' : '0');\\n    }\\n    return (\\n      <div className=\\\"container\\\">\\n      <div className=\\\"status\\\">{status}</div>\\n      <div className=\\\"game\\\">\\n        <div className=\\\"game-board\\\">\\n          <Board squares={current.squares} onClick={(i) => this.handleClick(i)}/>\\n        </div>\\n        <div className=\\\"game-info\\\">\\n          \\n          <ol>{moves}</ol>\\n        </div>\\n      </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nfunction calculateWinner(squares) {\\n  const lines = [\\n    [0, 1, 2],\\n    [3, 4, 5],\\n    [6, 7, 8],\\n    [0, 3, 6],\\n    [1, 4, 7],\\n    [2, 5, 8],\\n    [0, 4, 8],\\n    [2, 4, 6],\\n  ];\\n  for (let i = 0; i < lines.length; i++) {\\n    const [a, b, c] = lines[i];\\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\\n      return squares[a];\\n    }\\n  }\\n  let counter = 0;\\n  for (let i = 0; i < squares.length; i++){\\n      if (squares[i]){\\n        counter++;\\n      }\\n    }\\n  if (counter === 9){\\n    return 'Draw';\\n  }\\n  return null;\\n}\\n\\nexport default Game;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e,t,a){},16:function(e,t,a){},17:function(e,t,a){\"use strict\";a.r(t);var r=a(0),n=a.n(r),s=a(7),i=a.n(s),o=(a(15),a(8)),c=a(1),u=a(2),l=a(4),h=a(3),m=a(5),d=(a(16),function(e){function t(){return Object(c.a)(this,t),Object(l.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){var e=this;return n.a.createElement(\"button\",{className:\"square\",onClick:function(){return e.props.onClick()}},this.props.value)}}]),t}(n.a.Component)),v=function(e){function t(){return Object(c.a)(this,t),Object(l.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(u.a)(t,[{key:\"renderSquare\",value:function(e){var t=this;return n.a.createElement(d,{value:this.props.squares[e],onClick:function(){return t.props.onClick(e)}})}},{key:\"render\",value:function(){return n.a.createElement(\"div\",null,n.a.createElement(\"div\",{className:\"board-row\"},this.renderSquare(0),this.renderSquare(1),this.renderSquare(2)),n.a.createElement(\"div\",{className:\"board-row\"},this.renderSquare(3),this.renderSquare(4),this.renderSquare(5)),n.a.createElement(\"div\",{className:\"board-row\"},this.renderSquare(6),this.renderSquare(7),this.renderSquare(8)))}}]),t}(n.a.Component);function p(e){for(var t=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]],a=0;a<t.length;a++){var r=Object(o.a)(t[a],3),n=r[0],s=r[1],i=r[2];if(e[n]&&e[n]===e[s]&&e[n]===e[i])return e[n]}for(var c=0,u=0;u<e.length;u++)e[u]&&c++;return 9===c?\"Draw\":null}var b=function(e){function t(e){var a;return Object(c.a)(this,t),(a=Object(l.a)(this,Object(h.a)(t).call(this,e))).state={history:[{squares:Array(9).fill(null)}],xIsNext:!0,stepNumber:0},a}return Object(m.a)(t,e),Object(u.a)(t,[{key:\"handleClick\",value:function(e){var t=this.state.history.slice(0,this.state.stepNumber+1),a=t[t.length-1].squares.slice();p(a)||a[e]||(a[e]=this.state.xIsNext?\"X\":\"0\",this.setState({history:t.concat([{squares:a}]),stepNumber:t.length,xIsNext:!this.state.xIsNext}))}},{key:\"jumpTo\",value:function(e){this.setState({stepNumber:e,xIsNext:e%2===0})}},{key:\"render\",value:function(){var e=this,t=this.state.history,a=t[this.state.stepNumber],r=p(a.squares),s=t.map(function(t,a){var r=a?\"Go to move #\"+a:\"Go to game start\";return n.a.createElement(\"li\",{key:a},n.a.createElement(\"button\",{onClick:function(){return e.jumpTo(a)}},r))}),i=\"\";return i=\"X\"===r||\"0\"===r?r+\" won\":\"Draw\"===r?r:\"Next player: \"+(this.state.xIsNext?\"X\":\"0\"),n.a.createElement(\"div\",{className:\"container\"},n.a.createElement(\"div\",{className:\"status\"},i),n.a.createElement(\"div\",{className:\"game\"},n.a.createElement(\"div\",{className:\"game-board\"},n.a.createElement(v,{squares:a.squares,onClick:function(t){return e.handleClick(t)}})),n.a.createElement(\"div\",{className:\"game-info\"},n.a.createElement(\"ol\",null,s))))}}]),t}(n.a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(n.a.createElement(b,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},9:function(e,t,a){e.exports=a(17)}},[[9,1,2]]]);","extractedComments":[]}