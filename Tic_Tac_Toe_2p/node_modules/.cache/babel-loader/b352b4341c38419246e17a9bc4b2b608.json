{"ast":null,"code":"import _slicedToArray from \"/Users/artem/Applications/ttt/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/artem/Applications/ttt/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      className: \"square\",\n      onClick: () => this.props.onClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.value);\n  }\n\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n\n  handleClick(i) {\n    let squares = this.state.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : '0';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    let winner = calculateWinner(this.state.squares);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    let status = \"\";\n\n    if (winner === 'X' || winner === '0') {\n      status = winner + ' won';\n    }\n\n    if (winner === 'Draw') {\n      status = winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : '0');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Board, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  let counter = 0;\n\n  for (let i = 0; i < squares.length; i++) {\n    if (squares[i]) {\n      counter++;\n    }\n  }\n\n  if (counter === 9) {\n    return 'Draw';\n  }\n\n  return null;\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/artem/Applications/ttt/src/App.js"],"names":["React","ReactDOM","Square","Component","constructor","props","state","value","render","onClick","Board","squares","Array","fill","xIsNext","renderSquare","i","handleClick","slice","calculateWinner","setState","winner","status","Game","history","current","length","lines","a","b","c","counter"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nclass Square extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      value: null,\n    };\n  }\n\n  render() {\n    return (\n      <button className=\"square\" onClick={() => this.props.onClick()}>\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n    };\n  }\n\n  renderSquare(i) {\n    return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)}/>;\n  }\n\n  handleClick(i){\n    let squares = this.state.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : '0';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    }\n    );\n  }\n\n  render() {\n    let winner = calculateWinner(this.state.squares);\n    \n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      xIsNext: true,\n    };\n  }\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    let status = \"\";\n    if (winner === 'X' || winner === '0') {\n      status = winner + ' won';\n    }\n    if (winner === 'Draw'){\n      status = winner;\n    }\n    else {\n    status = 'Next player: ' + (this.state.xIsNext ? 'X' : '0');\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  let counter = 0;\n  for (let i = 0; i < squares.length; i++){\n      if (squares[i]){\n        counter++;\n      }\n    }\n  if (counter === 9){\n    return 'Draw';\n  }\n  return null;\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}