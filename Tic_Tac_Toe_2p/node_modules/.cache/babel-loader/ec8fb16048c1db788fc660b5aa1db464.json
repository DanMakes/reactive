{"ast":null,"code":"import _slicedToArray from \"/Users/artem/Applications/ttt/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/artem/Applications/ttt/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nclass Square extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      className: \"square\",\n      onClick: () => this.props.onClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, this.props.value);\n  }\n\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    let squares = current.squares.slice();\n    AI(squares);\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : '0';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, desc));\n    });\n    let status = \"\";\n\n    if (winner === 'X' || winner === '0') {\n      status = winner + ' won';\n    } else if (winner === 'Draw') {\n      status = winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : '0');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, moves))));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  let counter = 0;\n\n  for (let i = 0; i < squares.length; i++) {\n    if (squares[i]) {\n      counter++;\n    }\n  }\n\n  if (counter === 9) {\n    return 'Draw';\n  }\n\n  return null;\n}\n\nfunction AI(squares) {\n  console.log(squares);\n  var origBoard = []; // human\n\n  var huPlayer = 'O'; // ai\n\n  var aiPlayer = 'X'; // returns list of the indexes of empty spots on the board\n\n  function emptyIndexies(board) {\n    return board.filter(s => s != \"O\" && s != \"X\");\n  } // winning combinations using the board indexies\n\n\n  function winning(board, player) {\n    if (board[0] == player && board[1] == player && board[2] == player || board[3] == player && board[4] == player && board[5] == player || board[6] == player && board[7] == player && board[8] == player || board[0] == player && board[3] == player && board[6] == player || board[1] == player && board[4] == player && board[7] == player || board[2] == player && board[5] == player && board[8] == player || board[0] == player && board[4] == player && board[8] == player || board[2] == player && board[4] == player && board[6] == player) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function minimax(newBoard, player) {\n    //available spots\n    var availSpots = emptyIndexies(newBoard);\n  }\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/artem/Applications/ttt/src/App.js"],"names":["React","ReactDOM","Square","Component","render","props","onClick","value","Board","renderSquare","i","squares","Game","constructor","state","history","Array","fill","xIsNext","stepNumber","handleClick","slice","current","length","AI","calculateWinner","setState","concat","jumpTo","step","winner","moves","map","move","desc","status","lines","a","b","c","counter","console","log","origBoard","huPlayer","aiPlayer","emptyIndexies","board","filter","s","winning","player","minimax","newBoard","availSpots"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nclass Square extends React.Component {\n\n  render() {\n    return (\n      <button className=\"square\" onClick={() => this.props.onClick()}>\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nclass Board extends React.Component {\n\n  renderSquare(i) {\n    return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)}/>;\n  }\n\n  render() {\n    \n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      xIsNext: true,\n      stepNumber: 0,\n    };\n  }\n\n handleClick(i){\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    let squares = current.squares.slice();\n    AI(squares);\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : '0';\n    this.setState({\n      history: history.concat([{\n      squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    }\n    );\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n   }\n\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n    let status = \"\";\n    if (winner === 'X' || winner === '0') {\n      status = winner + ' won';\n    }\n    else if (winner === 'Draw'){\n      status = winner;\n    }\n    else {\n    status = 'Next player: ' + (this.state.xIsNext ? 'X' : '0');\n    }\n    return (\n      <div className=\"container\">\n      <div className=\"status\">{status}</div>\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board squares={current.squares} onClick={(i) => this.handleClick(i)}/>\n        </div>\n        <div className=\"game-info\">\n          \n          <ol>{moves}</ol>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  let counter = 0;\n  for (let i = 0; i < squares.length; i++){\n      if (squares[i]){\n        counter++;\n      }\n    }\n  if (counter === 9){\n    return 'Draw';\n  }\n  return null;\n}\n\nfunction AI(squares){\n\nconsole.log(squares);\n\n\n\n\nvar origBoard = [];\n\n// human\nvar huPlayer = 'O';\n\n// ai\nvar aiPlayer = 'X';\n\n// returns list of the indexes of empty spots on the board\nfunction emptyIndexies(board){\n  return  board.filter(s => s != \"O\" && s != \"X\");\n}\n\n// winning combinations using the board indexies\nfunction winning(board, player){\n if (\n (board[0] == player && board[1] == player && board[2] == player) ||\n (board[3] == player && board[4] == player && board[5] == player) ||\n (board[6] == player && board[7] == player && board[8] == player) ||\n (board[0] == player && board[3] == player && board[6] == player) ||\n (board[1] == player && board[4] == player && board[7] == player) ||\n (board[2] == player && board[5] == player && board[8] == player) ||\n (board[0] == player && board[4] == player && board[8] == player) ||\n (board[2] == player && board[4] == player && board[6] == player)\n ) {\n return true;\n } else {\n return false;\n }\n}\n\n\nfunction minimax(newBoard, player){\n  \n  //available spots\n  var availSpots = emptyIndexies(newBoard);\n\n}\n\n\n\n\n\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}