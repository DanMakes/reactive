{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Applications/Weather_forecast/src/Days.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './Days.css';\nimport Day from './Day';\n\nclass Days extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        date: \"Day_1\",\n        symbol: \"Symbol\",\n        temperature: 'Temp'\n      }, {\n        date: \"Day_2\",\n        symbol: \"Symbol\",\n        temperature: 'Temp'\n      }, {\n        date: \"Day_3\",\n        symbol: \"Symbol\",\n        temperature: 'Temp'\n      }, {\n        date: \"Day_4\",\n        symbol: \"Symbol\",\n        temperature: 'Temp'\n      }, {\n        date: \"Day_5\",\n        symbol: \"Symbol\",\n        temperature: 'Temp'\n      }]\n    };\n  }\n\n  fetchWeather() {\n    var results = [];\n    var lat = 50.433334;\n    var lon = 30.516666;\n    var url = \"http://api.openweathermap.org/data/2.5/forecast?lat=\" + lat + \"&lon=\" + lon + \"&APPID=47246b58dee8b9eba96fa2308e7d54e2\";\n    axios(url).then(response => {\n      var result = response.data; // get 3 values from result\n\n      results = result.list.map(function (day) {\n        return {\n          date: formatDate(day.dt_txt),\n          symbol: formatIcon(day.weather[0].icon),\n          temperature: formatTemp(day.main.temp)\n        };\n      });\n\n      function formatDate(date) {\n        // return month and day\n        return date.slice(8, 10) + '.' + date.slice(5, 7);\n      }\n\n      function formatIcon(icon) {\n        // return icon image\n        var icon_url = 'http://openweathermap.org/img/w/';\n        return icon_url + icon + '.png';\n      }\n\n      function formatTemp(temp) {\n        // return celcium results\n        return (temp - 273.15).toFixed(1) + ' C';\n      } // write received values to state\n\n\n      var five_results = [];\n\n      for (var i = 0; i < results.length; i += 8) {\n        five_results.push(results[i]);\n      }\n\n      this.setState({\n        data: five_results\n      });\n    }).catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    this.fetchWeather();\n    this.interval = setInterval(() => this.fetchWeather(), 60 * 10000);\n  }\n\n  onItemClick(event) {\n    event.currentTarget.style.backgroundColor = '#ccc';\n  }\n\n  render() {\n    var days = this.state.data.map(day => React.createElement(Day, {\n      data: day,\n      key: day.date,\n      onClick: () => this.onItemClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"Weather-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"Weather-days\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, days));\n  }\n\n}\n\nexport default Days;","map":{"version":3,"sources":["/Users/artem/Applications/Weather_forecast/src/Days.js"],"names":["React","Component","axios","Day","Days","constructor","props","state","data","date","symbol","temperature","fetchWeather","results","lat","lon","url","then","response","result","list","map","day","formatDate","dt_txt","formatIcon","weather","icon","formatTemp","main","temp","slice","icon_url","toFixed","five_results","i","length","push","setState","catch","err","console","log","componentDidMount","interval","setInterval","onItemClick","event","currentTarget","style","backgroundColor","render","days"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './Days.css';\nimport Day from './Day';\n\nclass Days extends Component {\n  constructor(props) {\n            super(props);\n            this.state = {\n                data: [{\n                        date: \"Day_1\",\n                        symbol: \"Symbol\",\n                        temperature: 'Temp',\n                },\n                  {\n                        date: \"Day_2\",\n                        symbol: \"Symbol\",\n                        temperature: 'Temp',\n                },\n                {\n                        date: \"Day_3\",\n                        symbol: \"Symbol\",\n                        temperature: 'Temp',\n                },\n                {\n                        date: \"Day_4\",\n                        symbol: \"Symbol\",\n                        temperature: 'Temp',\n                },\n                {\n                        date: \"Day_5\",\n                        symbol: \"Symbol\",\n                        temperature: 'Temp',\n                },\n                ]\n            };\n        }\n\n   fetchWeather() {\n        var results = [];\n        var lat = 50.433334;\n        var lon = 30.516666;\n        var url = \"http://api.openweathermap.org/data/2.5/forecast?lat=\"+ lat + \"&lon=\" + lon + \"&APPID=47246b58dee8b9eba96fa2308e7d54e2\";\n        axios(url)\n        .then((response) => { \n                var result = response.data;\n                // get 3 values from result\n                results = result.list.map(function(day){\n                        return {date: formatDate(day.dt_txt),\n                                symbol: formatIcon(day.weather[0].icon),\n                                temperature: formatTemp(day.main.temp),\n                                }\n                    });\n                \n                function formatDate(date){\n                        // return month and day\n                        return date.slice(8, 10) + '.' + date.slice(5, 7)\n                }\n\n                function formatIcon(icon){\n                     // return icon image\n                    var icon_url = 'http://openweathermap.org/img/w/';\n                    return icon_url + icon + '.png'\n                }\n\n                function formatTemp(temp){\n                     // return celcium results\n                    return (temp - 273.15).toFixed(1) + ' C';\n                }\n\n                // write received values to state\n                var five_results = []\n                for (var i = 0; i < results.length; i += 8){\n                    five_results.push(results[i]);\n                }\n                this.setState({data: five_results})\n            })\n            .catch(err => console.log(err));\n    };\n\n    componentDidMount() {\n            \n        this.fetchWeather();\n        this.interval = setInterval(() => this.fetchWeather(), 60 * 10000);\n    };\n\n    onItemClick(event) {\n    event.currentTarget.style.backgroundColor = '#ccc';\n    };\n\n   render() {\n   var days = this.state.data.map((day) =>\n        <Day data={day} key={day.date} onClick={() => this.onItemClick}/>\n            );\n\n  return (\n    <div className=\"Weather-container\">\n      <ul className=\"Weather-days\">{days}\n      </ul>\n      </div>\n  );\n}\n}\n\nexport default Days;\n"]},"metadata":{},"sourceType":"module"}