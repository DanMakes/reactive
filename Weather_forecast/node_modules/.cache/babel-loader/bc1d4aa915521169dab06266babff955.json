{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Applications/Weather_forecast/src/Days.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './Days.css';\nimport Day from './Day';\n\nclass Days extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        date: \"22\",\n        symbol: \"\",\n        temperature: []\n      }, {\n        date: \"23\",\n        symbol: \"\",\n        temperature: []\n      }, {\n        date: \"24\",\n        symbol: \"\",\n        temperature: []\n      }, {\n        date: \"25\",\n        symbol: \"\",\n        temperature: []\n      }, {\n        date: \"26\",\n        symbol: \"\",\n        temperature: []\n      }]\n    };\n  }\n\n  fetchWeather() {\n    var lat = 35;\n    var lon = 139;\n    var url = \"http://api.openweathermap.org/data/2.5/forecast?id=\" + lat + \"&lon=\" + lon + \"&APPID=47246b58dee8b9eba96fa2308e7d54e2\";\n    axios(url).then(response => {\n      var result = response.data;\n      console.log(result);\n      /*var result_rates = []; \n      result_rates.push(result.rates.GBP);   // replace received data with necessary currency\n      result_rates.push(result.rates.EUR);\n      result_rates.push(result.rates.USD);\n      result.rates = result_rates;\n      result_rates = [];\n      result.time_last_updated = String(result.time_last_updated);   // make time look better\n      result.time_last_updated = result.time_last_updated.slice(0,2) + ':' + result.time_last_updated.slice(2,4) + ':' + result.time_last_updated.slice(4,6);\n      result_array.push(result);    // make array out of object to use 'map' later\n      var data_arrays = this.state.data;  // clone current state\n      for (var j = 0; j < result_array.length; j++){\n      data_arrays[j] = result_array[j];   // update cloned state\n      }\n      this.setState({data: data_arrays});  // update original state\n      */\n    }).catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    this.fetchCurrencyData();\n    this.interval = setInterval(() => this.fetchCurrencyData(), 60 * 1000);\n  }\n\n  render() {\n    var days = this.state.data.map(day => React.createElement(Day, {\n      data: day,\n      key: day.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"Weather-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"Weather-days\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, days));\n  }\n\n}\n\nexport default Days;","map":{"version":3,"sources":["/Users/artem/Applications/Weather_forecast/src/Days.js"],"names":["React","Component","axios","Day","Days","constructor","props","state","data","date","symbol","temperature","fetchWeather","lat","lon","url","then","response","result","console","log","catch","err","componentDidMount","fetchCurrencyData","interval","setInterval","render","days","map","day"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACT,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CAAC;AACCC,QAAAA,IAAI,EAAE,IADP;AAECC,QAAAA,MAAM,EAAE,EAFT;AAGCC,QAAAA,WAAW,EAAE;AAHd,OAAD,EAKJ;AACMF,QAAAA,IAAI,EAAE,IADZ;AAEMC,QAAAA,MAAM,EAAE,EAFd;AAGMC,QAAAA,WAAW,EAAE;AAHnB,OALI,EAUN;AACQF,QAAAA,IAAI,EAAE,IADd;AAEQC,QAAAA,MAAM,EAAE,EAFhB;AAGQC,QAAAA,WAAW,EAAE;AAHrB,OAVM,EAeN;AACQF,QAAAA,IAAI,EAAE,IADd;AAEQC,QAAAA,MAAM,EAAE,EAFhB;AAGQC,QAAAA,WAAW,EAAE;AAHrB,OAfM,EAoBN;AACQF,QAAAA,IAAI,EAAE,IADd;AAEQC,QAAAA,MAAM,EAAE,EAFhB;AAGQC,QAAAA,WAAW,EAAE;AAHrB,OApBM;AADG,KAAb;AA4BH;;AAENC,EAAAA,YAAY,GAAG;AACV,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,GAAG,GAAG,GAAV;AACA,QAAIC,GAAG,GAAG,wDAAwDF,GAAxD,GAA8D,OAA9D,GAAwEC,GAAxE,GAA8E,yCAAxF;AACAZ,IAAAA,KAAK,CAACa,GAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAc;AACZ,UAAIC,MAAM,GAAGD,QAAQ,CAACT,IAAtB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA;;;;;;;;;;;;;;;AAgBH,KApBL,EAqBKG,KArBL,CAqBWC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CArBlB;AAsBH;;AAEDC,EAAAA,iBAAiB,GAAG;AAEhB,SAAKC,iBAAL;AACA,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKF,iBAAL,EAAP,EAAiC,KAAK,IAAtC,CAA3B;AACC;;AAENG,EAAAA,MAAM,GAAG;AACT,QAAIC,IAAI,GAAG,KAAKrB,KAAL,CAAWC,IAAX,CAAgBqB,GAAhB,CAAqBC,GAAD,IAC1B,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAEA,GAAX;AAAgB,MAAA,GAAG,EAAEA,GAAG,CAACrB,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,CAAX;AAID,WACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BmB,IAA9B,CADF,CADF;AAMD;;AA9E4B;;AAiF7B,eAAexB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './Days.css';\nimport Day from './Day';\n\nclass Days extends Component {\n  constructor(props) {\n            super(props);\n            this.state = {\n                data: [{\n                        date: \"22\",\n                        symbol: \"\",\n                        temperature: [],\n                },\n                  {\n                        date: \"23\",\n                        symbol: \"\",\n                        temperature: [],\n                },\n                {\n                        date: \"24\",\n                        symbol: \"\",\n                        temperature: [],\n                },\n                {\n                        date: \"25\",\n                        symbol: \"\",\n                        temperature: [],\n                },\n                {\n                        date: \"26\",\n                        symbol: \"\",\n                        temperature: [],\n                },\n                ]\n            };\n        }\n\n   fetchWeather() {\n        var lat = 35;\n        var lon = 139;\n        var url = \"http://api.openweathermap.org/data/2.5/forecast?id=\" + lat + \"&lon=\" + lon + \"&APPID=47246b58dee8b9eba96fa2308e7d54e2\";\n        axios(url)\n        .then((response) => { \n                var result = response.data;\n                console.log(result);\n                /*var result_rates = []; \n                result_rates.push(result.rates.GBP);   // replace received data with necessary currency\n                result_rates.push(result.rates.EUR);\n                result_rates.push(result.rates.USD);\n                result.rates = result_rates;\n                result_rates = [];\n                result.time_last_updated = String(result.time_last_updated);   // make time look better\n                result.time_last_updated = result.time_last_updated.slice(0,2) + ':' + result.time_last_updated.slice(2,4) + ':' + result.time_last_updated.slice(4,6);\n                result_array.push(result);    // make array out of object to use 'map' later\n                var data_arrays = this.state.data;  // clone current state\n                for (var j = 0; j < result_array.length; j++){\n                data_arrays[j] = result_array[j];   // update cloned state\n                }\n                this.setState({data: data_arrays});  // update original state\n                */\n\n            })\n            .catch(err => console.log(err));\n    };\n\n    componentDidMount() {\n            \n        this.fetchCurrencyData();\n        this.interval = setInterval(() => this.fetchCurrencyData(), 60 * 1000);\n        }\n\n   render() {\n   var days = this.state.data.map((day) =>\n        <Day data={day} key={day.date} />\n            );\n\n  return (\n    <div className=\"Weather-container\">\n      <ul className=\"Weather-days\">{days}\n      </ul>\n      </div>\n  );\n}\n}\n\nexport default Days;\n"]},"metadata":{},"sourceType":"module"}