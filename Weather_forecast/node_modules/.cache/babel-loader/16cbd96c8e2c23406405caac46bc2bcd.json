{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Applications/Weather_forecast/src/Days.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './Days.css';\nimport Day from './Day';\n\nclass Days extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        date: \"22\",\n        symbol: \"\",\n        temperature: []\n      }, {\n        date: \"23\",\n        symbol: \"\",\n        temperature: []\n      }, {\n        date: \"24\",\n        symbol: \"\",\n        temperature: []\n      }, {\n        date: \"25\",\n        symbol: \"\",\n        temperature: []\n      }, {\n        date: \"26\",\n        symbol: \"\",\n        temperature: []\n      }]\n    };\n  }\n\n  fetchWeather() {\n    var result_array = [];\n    var lat = 35;\n    var lon = 139;\n    var url = \"http://api.openweathermap.org/data/2.5/forecast?id=\" + lat + \"&lon=\" + lon + \"&APPID=47246b58dee8b9eba96fa2308e7d54e2\";\n    axios(url).then(response => {\n      var result = response.data;\n      console.log(result);\n      var result_rates = [];\n      result_rates.push(result.rates.GBP); // replace received data with necessary currency\n\n      result_rates.push(result.rates.EUR);\n      result_rates.push(result.rates.USD);\n      result.rates = result_rates;\n      result_rates = [];\n      result.time_last_updated = String(result.time_last_updated); // make time look better\n\n      result.time_last_updated = result.time_last_updated.slice(0, 2) + ':' + result.time_last_updated.slice(2, 4) + ':' + result.time_last_updated.slice(4, 6);\n      result_array.push(result); // make array out of object to use 'map' later\n\n      var data_arrays = this.state.data; // clone current state\n\n      for (var j = 0; j < result_array.length; j++) {\n        data_arrays[j] = result_array[j]; // update cloned state\n      }\n\n      this.setState({\n        data: data_arrays\n      }); // update original state\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    var days = this.state.data.map(day => React.createElement(Day, {\n      data: day,\n      key: day.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"Weather-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"Weather-days\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, days));\n  }\n\n}\n\nexport default Days;","map":{"version":3,"sources":["/Users/artem/Applications/Weather_forecast/src/Days.js"],"names":["React","Component","axios","Day","Days","constructor","props","state","data","date","symbol","temperature","fetchWeather","result_array","lat","lon","url","then","response","result","console","log","result_rates","push","rates","GBP","EUR","USD","time_last_updated","String","slice","data_arrays","j","length","setState","catch","err","render","days","map","day"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACT,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CAAC;AACCC,QAAAA,IAAI,EAAE,IADP;AAECC,QAAAA,MAAM,EAAE,EAFT;AAGCC,QAAAA,WAAW,EAAE;AAHd,OAAD,EAKJ;AACMF,QAAAA,IAAI,EAAE,IADZ;AAEMC,QAAAA,MAAM,EAAE,EAFd;AAGMC,QAAAA,WAAW,EAAE;AAHnB,OALI,EAUN;AACQF,QAAAA,IAAI,EAAE,IADd;AAEQC,QAAAA,MAAM,EAAE,EAFhB;AAGQC,QAAAA,WAAW,EAAE;AAHrB,OAVM,EAeN;AACQF,QAAAA,IAAI,EAAE,IADd;AAEQC,QAAAA,MAAM,EAAE,EAFhB;AAGQC,QAAAA,WAAW,EAAE;AAHrB,OAfM,EAoBN;AACQF,QAAAA,IAAI,EAAE,IADd;AAEQC,QAAAA,MAAM,EAAE,EAFhB;AAGQC,QAAAA,WAAW,EAAE;AAHrB,OApBM;AADG,KAAb;AA4BH;;AAENC,EAAAA,YAAY,GAAG;AACV,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,GAAG,GAAG,GAAV;AACA,QAAIC,GAAG,GAAG,wDAAwDF,GAAxD,GAA8D,OAA9D,GAAwEC,GAAxE,GAA8E,yCAAxF;AACAb,IAAAA,KAAK,CAACc,GAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAc;AACZ,UAAIC,MAAM,GAAGD,QAAQ,CAACV,IAAtB;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAIG,YAAY,GAAG,EAAnB;AACAA,MAAAA,YAAY,CAACC,IAAb,CAAkBJ,MAAM,CAACK,KAAP,CAAaC,GAA/B,EAJY,CAI2B;;AACvCH,MAAAA,YAAY,CAACC,IAAb,CAAkBJ,MAAM,CAACK,KAAP,CAAaE,GAA/B;AACAJ,MAAAA,YAAY,CAACC,IAAb,CAAkBJ,MAAM,CAACK,KAAP,CAAaG,GAA/B;AACAR,MAAAA,MAAM,CAACK,KAAP,GAAeF,YAAf;AACAA,MAAAA,YAAY,GAAG,EAAf;AACAH,MAAAA,MAAM,CAACS,iBAAP,GAA2BC,MAAM,CAACV,MAAM,CAACS,iBAAR,CAAjC,CATY,CASmD;;AAC/DT,MAAAA,MAAM,CAACS,iBAAP,GAA2BT,MAAM,CAACS,iBAAP,CAAyBE,KAAzB,CAA+B,CAA/B,EAAiC,CAAjC,IAAsC,GAAtC,GAA4CX,MAAM,CAACS,iBAAP,CAAyBE,KAAzB,CAA+B,CAA/B,EAAiC,CAAjC,CAA5C,GAAkF,GAAlF,GAAwFX,MAAM,CAACS,iBAAP,CAAyBE,KAAzB,CAA+B,CAA/B,EAAiC,CAAjC,CAAnH;AACAjB,MAAAA,YAAY,CAACU,IAAb,CAAkBJ,MAAlB,EAXY,CAWkB;;AAC9B,UAAIY,WAAW,GAAG,KAAKxB,KAAL,CAAWC,IAA7B,CAZY,CAYwB;;AACpC,WAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,YAAY,CAACoB,MAAjC,EAAyCD,CAAC,EAA1C,EAA6C;AAC7CD,QAAAA,WAAW,CAACC,CAAD,CAAX,GAAiBnB,YAAY,CAACmB,CAAD,CAA7B,CAD6C,CACT;AACnC;;AACD,WAAKE,QAAL,CAAc;AAAC1B,QAAAA,IAAI,EAAEuB;AAAP,OAAd,EAhBY,CAgByB;AAExC,KAnBL,EAoBKI,KApBL,CAoBWC,GAAG,IAAIhB,OAAO,CAACC,GAAR,CAAYe,GAAZ,CApBlB;AAqBH;;AAGHC,EAAAA,MAAM,GAAG;AACT,QAAIC,IAAI,GAAG,KAAK/B,KAAL,CAAWC,IAAX,CAAgB+B,GAAhB,CAAqBC,GAAD,IACzB,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAEA,GAAX;AAAgB,MAAA,GAAG,EAAEA,GAAG,CAAC/B,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAX;AAIA,WACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B6B,IAA9B,CADF,CADF;AAMD;;AAzE4B;;AA4E7B,eAAelC,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './Days.css';\nimport Day from './Day';\n\nclass Days extends Component {\n  constructor(props) {\n            super(props);\n            this.state = {\n                data: [{\n                        date: \"22\",\n                        symbol: \"\",\n                        temperature: [],\n                },\n                  {\n                        date: \"23\",\n                        symbol: \"\",\n                        temperature: [],\n                },\n                {\n                        date: \"24\",\n                        symbol: \"\",\n                        temperature: [],\n                },\n                {\n                        date: \"25\",\n                        symbol: \"\",\n                        temperature: [],\n                },\n                {\n                        date: \"26\",\n                        symbol: \"\",\n                        temperature: [],\n                },\n                ]\n            };\n        }\n\n   fetchWeather() {\n        var result_array = [];\n        var lat = 35;\n        var lon = 139;\n        var url = \"http://api.openweathermap.org/data/2.5/forecast?id=\" + lat + \"&lon=\" + lon + \"&APPID=47246b58dee8b9eba96fa2308e7d54e2\";\n        axios(url)\n        .then((response) => { \n                var result = response.data;\n                console.log(result);\n                var result_rates = []; \n                result_rates.push(result.rates.GBP);   // replace received data with necessary currency\n                result_rates.push(result.rates.EUR);\n                result_rates.push(result.rates.USD);\n                result.rates = result_rates;\n                result_rates = [];\n                result.time_last_updated = String(result.time_last_updated);   // make time look better\n                result.time_last_updated = result.time_last_updated.slice(0,2) + ':' + result.time_last_updated.slice(2,4) + ':' + result.time_last_updated.slice(4,6);\n                result_array.push(result);    // make array out of object to use 'map' later\n                var data_arrays = this.state.data;  // clone current state\n                for (var j = 0; j < result_array.length; j++){\n                data_arrays[j] = result_array[j];   // update cloned state\n                }\n                this.setState({data: data_arrays});  // update original state\n\n            })\n            .catch(err => console.log(err));\n    }\n\n\n  render() {\n  var days = this.state.data.map((day) =>\n        <Day data={day} key={day.date} />\n            );\n\n  return (\n    <div className=\"Weather-container\">\n      <ul className=\"Weather-days\">{days}\n      </ul>\n      </div>\n  );\n}\n}\n\nexport default Days;\n"]},"metadata":{},"sourceType":"module"}