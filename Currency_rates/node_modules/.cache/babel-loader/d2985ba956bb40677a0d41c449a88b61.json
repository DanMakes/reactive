{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Applications/react_app/src/Components/Tickers.js\";\nimport React, { Component } from 'react';\nimport './Tickers.css';\nimport Currency from './Currency';\nimport axios from 'axios';\n\nclass Tickers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        base: \"USD\",\n        date: \"Bitcoin\",\n        rates: \"1\"\n      }]\n    };\n  }\n\n  fetchCurrencyData() {\n    axios('https://api.exchangerate-api.com/v4/latest/USD').then(response => {\n      console.log(response.data);\n      var result = response.data; //console.log(this);\n\n      this.setState({\n        data: result\n      });\n    }).catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    this.fetchCurrencyData();\n    this.interval = setInterval(() => this.fetchCurrencyData(), 60 * 1000);\n  }\n\n  render() {\n    console.log(this.state.data);\n    var tickers = this.state.data.map(curr => React.createElement(Currency, {\n      data: curr,\n      key: curr.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"tickers-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"tickers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, tickers), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Tickers;","map":{"version":3,"sources":["/Users/artem/Applications/react_app/src/Components/Tickers.js"],"names":["React","Component","Currency","axios","Tickers","constructor","props","state","data","base","date","rates","fetchCurrencyData","then","response","console","log","result","setState","catch","err","componentDidMount","interval","setInterval","render","tickers","map","curr","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAExBI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CACF;AACIC,QAAAA,IAAI,EAAE,KADV;AAEIC,QAAAA,IAAI,EAAE,SAFV;AAGIC,QAAAA,KAAK,EAAE;AAHX,OADE;AADG,KAAb;AASH;;AAEDC,EAAAA,iBAAiB,GAAG;AACpBT,IAAAA,KAAK,CAAC,gDAAD,CAAL,CACCU,IADD,CACOC,QAAD,IAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACN,IAArB;AACA,UAAIS,MAAM,GAAGH,QAAQ,CAACN,IAAtB,CAFY,CAGZ;;AACA,WAAKU,QAAL,CAAc;AAAEV,QAAAA,IAAI,EAAES;AAAR,OAAd;AACH,KANL,EAOKE,KAPL,CAOWC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAPlB;AAQC;;AAEDC,EAAAA,iBAAiB,GAAG;AACpB,SAAKT,iBAAL;AACA,SAAKU,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKX,iBAAL,EAAP,EAAiC,KAAK,IAAtC,CAA3B;AACC;;AAEDY,EAAAA,MAAM,GAAG;AACLT,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,IAAvB;AACA,QAAIiB,OAAO,GAAG,KAAKlB,KAAL,CAAWC,IAAX,CAAgBkB,GAAhB,CAAqBC,IAAD,IAC9B,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU,CAAd;AAGA,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBH,OAAzB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA1CuB;;AA6C5B,eAAerB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Tickers.css';\nimport Currency from './Currency';\nimport axios from 'axios';\n\n\nclass Tickers extends Component {\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                data: [\n                    {\n                        base: \"USD\",\n                        date: \"Bitcoin\",\n                        rates: \"1\",\n                    },\n                ]\n            };\n        }\n\n        fetchCurrencyData() {\n        axios('https://api.exchangerate-api.com/v4/latest/USD')\n        .then((response) => { \n                console.log(response.data);\n                var result = response.data;\n                //console.log(this);\n                this.setState({ data: result});\n            })\n            .catch(err => console.log(err));\n        }\n\n        componentDidMount() {\n        this.fetchCurrencyData();\n        this.interval = setInterval(() => this.fetchCurrencyData(), 60 * 1000);\n        }\n\n        render() {\n            console.log(this.state.data);\n            var tickers = this.state.data.map((curr) =>\n                <Currency data={curr} key={curr.id} />\n            );\n            return (\n                <div className=\"tickers-container\">\n                    <ul className=\"tickers\">{tickers}</ul>\n                    <p></p>\n               </div>\n            );\n        }\n    }\n\n    export default Tickers;"]},"metadata":{},"sourceType":"module"}