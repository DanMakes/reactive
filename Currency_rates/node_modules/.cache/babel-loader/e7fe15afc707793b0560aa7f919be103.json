{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Applications/react_app/src/Components/Tickers.js\";\nimport React, { Component } from 'react';\nimport './Tickers.css';\nimport Currency from './Currency';\nimport axios from 'axios';\n\nclass Tickers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        id: \"bitcoin\",\n        name: \"Bitcoin\",\n        symbol: \"BTC\",\n        price_usd: \"1\",\n        percent_change_1h: \"0\",\n        percent_change_24h: \"0\",\n        percent_change_7d: \"0\"\n      }]\n    };\n  }\n\n  fetchCryptocurrencyData() {\n    axios.get(\"http://ip-api.com/json\").then(function (response) {\n      var wanted = [\"bitcoin\", \"ethereum\", \"litecoin\"];\n      console.log(response);\n      var result = response.data.filter(currency => wanted.includes(currency.id));\n      this.setState({\n        data: result\n      });\n    }).catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    this.fetchCryptocurrencyData();\n    this.interval = setInterval(() => this.fetchCryptocurrencyData(), 60 * 1000);\n  }\n\n  render() {\n    var tickers = this.state.data.map(currency => React.createElement(Cryptocurrency, {\n      data: currency,\n      key: currency.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"tickers-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"tickers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, tickers), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Tickers;","map":{"version":3,"sources":["/Users/artem/Applications/react_app/src/Components/Tickers.js"],"names":["React","Component","Currency","axios","Tickers","constructor","props","state","data","id","name","symbol","price_usd","percent_change_1h","percent_change_24h","percent_change_7d","fetchCryptocurrencyData","get","then","response","wanted","console","log","result","filter","currency","includes","setState","catch","err","componentDidMount","interval","setInterval","render","tickers","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAExBI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CACF;AACIC,QAAAA,EAAE,EAAE,SADR;AAEIC,QAAAA,IAAI,EAAE,SAFV;AAGIC,QAAAA,MAAM,EAAE,KAHZ;AAIIC,QAAAA,SAAS,EAAE,GAJf;AAKIC,QAAAA,iBAAiB,EAAE,GALvB;AAMIC,QAAAA,kBAAkB,EAAE,GANxB;AAOIC,QAAAA,iBAAiB,EAAE;AAPvB,OADE;AADG,KAAb;AAaH;;AAEDC,EAAAA,uBAAuB,GAAG;AAC1Bb,IAAAA,KAAK,CAACc,GAAN,CAAU,wBAAV,EACCC,IADD,CACM,UAAUC,QAAV,EAAoB;AAClB,UAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,UAAxB,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,UAAII,MAAM,GAAGJ,QAAQ,CAACX,IAAT,CAAcgB,MAAd,CAAqBC,QAAQ,IAAIL,MAAM,CAACM,QAAP,CAAgBD,QAAQ,CAAChB,EAAzB,CAAjC,CAAb;AACA,WAAKkB,QAAL,CAAc;AAAEnB,QAAAA,IAAI,EAAEe;AAAR,OAAd;AACH,KANL,EAOKK,KAPL,CAOWC,GAAG,IAAIR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CAPlB;AAQC;;AAEDC,EAAAA,iBAAiB,GAAG;AACpB,SAAKd,uBAAL;AACA,SAAKe,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKhB,uBAAL,EAAP,EAAuC,KAAK,IAA5C,CAA3B;AACC;;AAEDiB,EAAAA,MAAM,GAAG;AACL,QAAIC,OAAO,GAAG,KAAK3B,KAAL,CAAWC,IAAX,CAAgB2B,GAAhB,CAAqBV,QAAD,IAC9B,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAEA,QAAtB;AAAgC,MAAA,GAAG,EAAEA,QAAQ,CAAChB,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU,CAAd;AAGA,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyByB,OAAzB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA7CuB;;AAgD5B,eAAe9B,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Tickers.css';\nimport Currency from './Currency';\nimport axios from 'axios';\n\n\nclass Tickers extends Component {\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                data: [\n                    {\n                        id: \"bitcoin\",\n                        name: \"Bitcoin\",\n                        symbol: \"BTC\",\n                        price_usd: \"1\",\n                        percent_change_1h: \"0\",\n                        percent_change_24h: \"0\",\n                        percent_change_7d: \"0\"\n                    },\n                ]\n            };\n        }\n\n        fetchCryptocurrencyData() {\n        axios.get(\"http://ip-api.com/json\")\n        .then(function (response) {\n                var wanted = [\"bitcoin\", \"ethereum\", \"litecoin\"];\n                console.log(response)\n                var result = response.data.filter(currency => wanted.includes(currency.id));\n                this.setState({ data: result});\n            })\n            .catch(err => console.log(err));\n        }\n\n        componentDidMount() {\n        this.fetchCryptocurrencyData();\n        this.interval = setInterval(() => this.fetchCryptocurrencyData(), 60 * 1000);\n        }\n\n        render() {\n            var tickers = this.state.data.map((currency) =>\n                <Cryptocurrency data={currency} key={currency.id} />\n            );\n            return (\n                <div className=\"tickers-container\">\n                    <ul className=\"tickers\">{tickers}</ul>\n                    <p></p>\n               </div>\n            );\n        }\n    }\n\n    export default Tickers;"]},"metadata":{},"sourceType":"module"}