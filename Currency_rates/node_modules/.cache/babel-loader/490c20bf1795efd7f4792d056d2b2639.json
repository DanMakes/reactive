{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Applications/Currency_rates/src/Components/Rates.js\";\nimport React, { Component } from 'react';\nimport './Rates.css';\nimport axios from 'axios';\nimport Currency from './Currency';\n\nclass Rates extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        base: \"GBP\",\n        date: \"\",\n        time_last_updated: \"\",\n        rates: []\n      }, {\n        base: \"EUR\",\n        date: \"\",\n        time_last_updated: \"\",\n        rates: []\n      }, {\n        base: \"USD\",\n        date: \"\",\n        time_last_updated: \"\",\n        rates: []\n      }]\n    };\n  }\n\n  fetchCurrencyData() {\n    var result_array = [];\n    var arr_cur = ['GBP', 'EUR', 'USD'];\n\n    for (var i = 0; i < arr_cur.length; i++) {\n      axios('https://api.exchangerate-api.com/v4/latest/' + arr_cur[i]).then(response => {\n        var result = response.data;\n        var result_rates = [];\n        result_rates.push(result.rates.GBP);\n        result_rates.push(result.rates.EUR);\n        result_rates.push(result.rates.USD);\n        result.rates = result_rates;\n        result_rates = [];\n        result.time_last_updated = String(result.time_last_updated);\n        result.time_last_updated = result.time_last_updated.slice(0, 2) + ':' + result.time_last_updated.slice(2, 4) + ':' + result.time_last_updated.slice(4, 6);\n        result_array.push(result);\n        var data_arrays = this.state.data;\n\n        for (var j = 0; j < result_array.length; j++) {\n          data_arrays[j] = result_array[j];\n        }\n\n        this.setState({\n          data: data_arrays\n        });\n      }).catch(err => console.log(err));\n    }\n  }\n\n  componentDidMount() {\n    this.fetchCurrencyData(); //  this.interval = setInterval(() => this.fetchCurrencyData(), 60 * 1000);\n  }\n\n  render() {\n    //  console.log(this.state.data);\n    // console.log(this.state.data);\n    var rates = this.state.data.map(currency => React.createElement(Currency, {\n      data: currency,\n      key: currency.base,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"rates-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"rates\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, rates), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Rates;","map":{"version":3,"sources":["/Users/artem/Applications/Currency_rates/src/Components/Rates.js"],"names":["React","Component","axios","Currency","Rates","constructor","props","state","data","base","date","time_last_updated","rates","fetchCurrencyData","result_array","arr_cur","i","length","then","response","result","result_rates","push","GBP","EUR","USD","String","slice","data_arrays","j","setState","catch","err","console","log","componentDidMount","render","map","currency"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Rates.css';\nimport axios from 'axios';\nimport Currency from './Currency'\n\n\nclass Rates extends Component {\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                data: [{\n                        base: \"GBP\",\n                        date: \"\",\n                        time_last_updated: \"\",\n                        rates: [],\n                },\n                {\n                        base: \"EUR\",\n                        date: \"\",\n                        time_last_updated: \"\",\n                        rates: [],\n                },\n                {\n                        base: \"USD\",\n                        date: \"\",\n                        time_last_updated: \"\",\n                        rates: [],\n                },\n                ]\n            };\n        }\n\n        fetchCurrencyData() {\n        var result_array = [];\n        var arr_cur = ['GBP', 'EUR', 'USD'];\n        for (var i = 0; i < arr_cur.length; i++){\n        axios('https://api.exchangerate-api.com/v4/latest/' + arr_cur[i])\n        .then((response) => { \n                var result = response.data;\n                var result_rates = [];\n                result_rates.push(result.rates.GBP);\n                result_rates.push(result.rates.EUR);\n                result_rates.push(result.rates.USD);\n                result.rates = result_rates;\n                result_rates = [];\n                result.time_last_updated = String(result.time_last_updated);\n                result.time_last_updated = result.time_last_updated.slice(0,2) + ':' + result.time_last_updated.slice(2,4) + ':' + result.time_last_updated.slice(4,6);\n                result_array.push(result);\n                var data_arrays = this.state.data;\n                for (var j = 0; j < result_array.length; j++){\n                data_arrays[j] = result_array[j]; \n                }\n                this.setState({data: data_arrays});\n\n            })\n            .catch(err => console.log(err));\n        }\n    }\n\n        componentDidMount() {\n            \n        this.fetchCurrencyData();\n      //  this.interval = setInterval(() => this.fetchCurrencyData(), 60 * 1000);\n        }\n\n        render() {\n          //  console.log(this.state.data);\n          // console.log(this.state.data);\n            var rates = this.state.data.map((currency) =>\n        <Currency data={currency} key={currency.base} />\n            );\n            return (\n                <div className=\"rates-container\">\n                    <ul className=\"rates\">{rates}</ul>\n                    <p></p>\n               </div>\n            );\n        }\n    }\n\n    export default Rates;"]},"metadata":{},"sourceType":"module"}